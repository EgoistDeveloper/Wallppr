<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:Wallppr.UI.Converters" 
                    xmlns:paginationConverters="clr-namespace:Wallppr.UI.Converters.Pagination">

    <paginationConverters:PaginationPrevNextIconConverter x:Key="PaginationPrevNextIconConverter" />
    <paginationConverters:PaginationPrevNextNumberConverter x:Key="PaginationPrevNextNumberConverter" />
    <paginationConverters:PaginationIsCurrentConverter x:Key="PaginationIsCurrentConverter" />
    <converters:BoolToReverseVisibilityConverter x:Key="BoolToReverseVisibilityConverter" />

    <!-- Focus Border -->
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" 
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" 
                               StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Global Button Style -->
    <Style TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="{StaticResource ThemeColor2Brush}"/>
        <Setter Property="Foreground" Value="{StaticResource SnowWhiteBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <!-- Content -->
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" 
                              BorderThickness="{TemplateBinding BorderThickness}" 
                              Background="{TemplateBinding Background}" 
                              SnapsToDevicePixels="true" 
                              CornerRadius="15">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" 
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                            Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="7" Color="#000" 
                                              Opacity=".1" ShadowDepth="3" Direction="0"/>
                        </Border.Effect>
                    </Border>

                    <!-- Triggers -->
                    <ControlTemplate.Triggers>
                        <!-- IsDefault -->
                        <Trigger Property="IsDefault" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BlueGrey900Brush}"/>
                            <Setter Property="BorderThickness" TargetName="border" Value="2"/>
                        </Trigger>
                        <!-- IsEnabled:true & IsMouseOver:true -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!-- Border Background -->
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).Color" Storyboard.TargetName="border">
                                            <EasingColorKeyFrame KeyTime="0:0:0.2" Value="{StaticResource ThemeColor3}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!-- Border Background -->
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).Color" Storyboard.TargetName="border">
                                            <EasingColorKeyFrame KeyTime="0:0:0.2" Value="{StaticResource ThemeColor2}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <!-- IsDefault:rtue & IsEnabled:true & IsMouseOver:true -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsDefault" Value="True"/>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="border" Value="0.9"/>
                            <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- NavbarButtonStyle -->
    <Style x:Key="NavbarButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Margin" Value="15 0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Border" 
                            Background="{StaticResource ThemeColor2Brush}"
                            BorderThickness="0"
                            BorderBrush="{StaticResource ThemeColor3Brush}"
                            CornerRadius="15"
                            Margin="{TemplateBinding Margin}"
                            Padding="0 0 20 0">
                        <Grid>
                            <Grid.Effect>
                                <DropShadowEffect BlurRadius="10" Color="#000" 
                                                  Opacity=".05" ShadowDepth="5" Direction="0"/>
                            </Grid.Effect>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <!-- Clickable Background -->
                            <Border Grid.ColumnSpan="2" 
                                    Background="{StaticResource WhiteBrush}"
                                    Opacity=".000001" />

                            <Path x:Name="Icon"
                                  Height="18" Width="18"
                                  Stretch="Uniform" Opacity=".7" 
                                  Fill="{StaticResource BlueGrey500Brush}"
                                  Data="{TemplateBinding Tag}" 
                                  SnapsToDevicePixels="True"/>

                            <TextBlock x:Name="TextContent" Grid.Column="1"
                                       Text="{TemplateBinding Content}"
                                       Foreground="{StaticResource BlueGrey400Brush}"
                                       TextAlignment="Left"
                                       VerticalAlignment="Center"
                                       FontWeight="SemiBold" FontSize="14"/>

                            <Border x:Name="LineBorder" BorderBrush="{StaticResource ThemeColor4Brush}" 
                                    HorizontalAlignment="Left" BorderThickness="0 0 0 1" 
                                    Grid.Column="1" Height="30" Width="0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <!--<Setter Property="BorderThickness" TargetName="Border" Value="1"/>-->
                            <!-- In -->
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!-- Text Foreground -->
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground).Color" Storyboard.TargetName="TextContent">
                                            <EasingColorKeyFrame KeyTime="0:0:0.2" Value="{StaticResource BlueGrey300}"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <!-- Icon Fill -->
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Fill).Color" Storyboard.TargetName="Icon">
                                            <EasingColorKeyFrame KeyTime="0:0:0.2" Value="{StaticResource ThemeColor5}"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <!-- Line Border -->
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Width)" Storyboard.TargetName="LineBorder">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="100"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <!-- Out -->
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!-- Text Foreground -->
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground).Color" Storyboard.TargetName="TextContent">
                                            <EasingColorKeyFrame KeyTime="0:0:0.2" Value="{StaticResource BlueGrey400}"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <!-- Icon Fill -->
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Fill).Color" Storyboard.TargetName="Icon">
                                            <EasingColorKeyFrame KeyTime="0:0:0.2" Value="{StaticResource BlueGrey500}"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <!-- Line Border -->
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Width)" Storyboard.TargetName="LineBorder">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Pagination Button Style -->
    <Style x:Key="PaginationButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="0 0 0 2"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{StaticResource ThemeColor4Brush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="35"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Background="{StaticResource WhiteBrush}"
                                Opacity=".000001"/>

                        <Border Background="{StaticResource ThemeColor4Brush}"
                                Visibility="{Binding Tag.PageType, 
                                             RelativeSource={RelativeSource Mode=FindAncestor, 
                                             AncestorType={x:Type Button}},
                                             Converter={StaticResource PaginationIsCurrentConverter}}"/>

                        <Border x:Name="Border" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                Visibility="{Binding Tag.PageType, 
                                             RelativeSource={RelativeSource Mode=FindAncestor, 
                                             AncestorType={x:Type Button}},
                                             Converter={StaticResource PaginationPrevNextNumberConverter}}">
                            <TextBlock x:Name="Page" 
                                       Text="{Binding PageNumber}"
                                       FontWeight="DemiBold"
                                       Foreground="{StaticResource BlueGrey200Brush}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"/>
                        </Border>

                        <Path Data="{Binding Tag.PageType, 
                                     RelativeSource={RelativeSource Mode=FindAncestor, 
                                     AncestorType={x:Type Button}},
                                     Converter={StaticResource PaginationPrevNextIconConverter}}"
                              Fill="{TemplateBinding BorderBrush}"
                              Height="17" Width="17"
                              Stretch="Uniform"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Tag.PageNumber}" Value="">
                            <Setter Property="Visibility" TargetName="Border" Value="Visible"/>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!-- In -->
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!-- Icon Fill -->
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground).Color" Storyboard.TargetName="Page">
                                            <EasingColorKeyFrame KeyTime="0:0:0.3" Value="{StaticResource BlueGrey50}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <!-- Out -->
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!-- Icon Fill -->
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground).Color" Storyboard.TargetName="Page">
                                            <EasingColorKeyFrame KeyTime="0:0:0.2" Value="{StaticResource BlueGrey200}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Left Icon Button Style -->
    <Style x:Key="LeftIconButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Margin" Value="15 0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" 
                            Background="{StaticResource ThemeColor2Brush}"
                            BorderThickness="0"
                            BorderBrush="{StaticResource ThemeColor3Brush}"
                            CornerRadius="15"
                            Margin="{TemplateBinding Margin}"
                            Padding="0 0 20 0">
                        <Grid>
                            <Grid.Effect>
                                <DropShadowEffect BlurRadius="10" Color="#000" 
                                                  Opacity=".05" ShadowDepth="5" Direction="0"/>
                            </Grid.Effect>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <!-- Clickable Background -->
                            <Border Grid.ColumnSpan="2" 
                                    Background="{StaticResource WhiteBrush}"
                                    Opacity=".000001" />

                            <Path x:Name="Icon"
                                  Height="18" Width="18"
                                  Stretch="Uniform" Opacity=".7" 
                                  Fill="{StaticResource BlueGrey500Brush}"
                                  Data="{TemplateBinding Tag}" 
                                  SnapsToDevicePixels="True"/>

                            <TextBlock x:Name="TextContent" Grid.Column="1"
                                       Text="{TemplateBinding Content}"
                                       Foreground="{StaticResource BlueGrey400Brush}"
                                       TextAlignment="Left"
                                       VerticalAlignment="Center"
                                       FontWeight="SemiBold" FontSize="14"/>

                            <Border x:Name="LineBorder" BorderBrush="{StaticResource ThemeColor4Brush}" 
                                    HorizontalAlignment="Left" BorderThickness="0 0 0 1" 
                                    Grid.Column="1" Height="30" Width="100"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter Property="BorderThickness" TargetName="Border" Value="1"/>-->
                            <!-- In -->
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!-- Text Foreground -->
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground).Color" Storyboard.TargetName="TextContent">
                                            <EasingColorKeyFrame KeyTime="0:0:0.2" Value="{StaticResource BlueGrey300}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <!-- Out -->
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!-- Text Foreground -->
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground).Color" Storyboard.TargetName="TextContent">
                                            <EasingColorKeyFrame KeyTime="0:0:0.2" Value="{StaticResource BlueGrey400}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>