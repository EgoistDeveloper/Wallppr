<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:converters="clr-namespace:Wallppr.UI.Converters"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:pages="clr-namespace:Wallppr.UI.Pages">
    
    <converters:IntMinusConverter x:Key="IntMinusConverter"/>
    <converters:MultipleParametersConverter x:Key="MultipleParametersConverter" />
    <converters:HasIdToVisibilityConverter x:Key="HasIdToVisibilityConverter"/>
    <converters:HasIdToReverseVisibilityConverter x:Key="HasIdToReverseVisibilityConverter"/>

    <!--#region Wallpapers -->

    <ContextMenu x:Key="WallpaperItemContextMenu">
        <MenuItem Header="{DynamicResource SetAsBackground}"
                  Command="{Binding PlacementTarget.Tag.SetAsCommand, 
                                        RelativeSource={RelativeSource Mode=FindAncestor, 
                                        AncestorType={x:Type ContextMenu}}}"
                  Tag="AsBackground">
            <MenuItem.CommandParameter>
                <MultiBinding Converter="{StaticResource MultipleParametersConverter}">
                    <Binding Path="PlacementTarget.DataContext" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}"/>
                    <Binding Path="Tag" RelativeSource="{RelativeSource Mode=Self}"/>
                </MultiBinding>
            </MenuItem.CommandParameter>
            <MenuItem.Icon>
                <Path Height="15" Width="15" Stretch="Uniform"
                      Fill="{StaticResource BlueGrey600Brush}"
                      Data="{Binding Source={StaticResource FlipToBack}, Path=Data}"/>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="{DynamicResource SaveAs}"
                  Command="{Binding PlacementTarget.Tag.SetAsCommand, 
                                        RelativeSource={RelativeSource Mode=FindAncestor, 
                                        AncestorType={x:Type ContextMenu}}}"
                  Tag="SaveAs">
            <MenuItem.CommandParameter>
                <MultiBinding Converter="{StaticResource MultipleParametersConverter}">
                    <Binding Path="PlacementTarget.DataContext" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}"/>
                    <Binding Path="Tag" RelativeSource="{RelativeSource Mode=Self}"/>
                </MultiBinding>
            </MenuItem.CommandParameter>
            <MenuItem.Icon>
                <Path Height="15" Width="15" Stretch="Uniform"
                      Fill="{StaticResource BlueGrey600Brush}"
                      Data="{Binding Source={StaticResource ContentSaveSettingsOutline}, Path=Data}"/>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="{DynamicResource Download}"
                  Command="{Binding PlacementTarget.Tag.SetAsCommand, 
                                    RelativeSource={RelativeSource Mode=FindAncestor, 
                                    AncestorType={x:Type ContextMenu}}}"
                  Visibility="{Binding Id, Converter={StaticResource HasIdToReverseVisibilityConverter}}"
                  Tag="">
            <MenuItem.CommandParameter>
                <MultiBinding Converter="{StaticResource MultipleParametersConverter}">
                    <Binding Path="PlacementTarget.DataContext" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}"/>
                    <Binding Path="Tag" RelativeSource="{RelativeSource Mode=Self}"/>
                </MultiBinding>
            </MenuItem.CommandParameter>
            <MenuItem.Icon>
                <Path Height="15" Width="15" Stretch="Uniform"
                      Fill="{StaticResource BlueGrey600Brush}"
                      Data="{Binding Source={StaticResource DownloadOutline}, Path=Data}"/>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="{StaticResource RemoveFromMyList}"
                  Command="{Binding PlacementTarget.Tag.SetAsCommand, 
                                    RelativeSource={RelativeSource Mode=FindAncestor, 
                                    AncestorType={x:Type ContextMenu}}}"
                  Visibility="{Binding Id, Converter={StaticResource HasIdToVisibilityConverter}}"
                  Tag="Remove">
            <MenuItem.CommandParameter>
                <MultiBinding Converter="{StaticResource MultipleParametersConverter}">
                    <Binding Path="PlacementTarget.DataContext" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}"/>
                    <Binding Path="Tag" RelativeSource="{RelativeSource Mode=Self}"/>
                </MultiBinding>
            </MenuItem.CommandParameter>
            <MenuItem.Icon>
                <Path Height="15" Width="15" Stretch="Uniform"
                      Fill="{StaticResource BlueGrey600Brush}"
                      Data="{Binding Source={StaticResource TableColumnRemove}, Path=Data}"/>
            </MenuItem.Icon>
        </MenuItem>
    </ContextMenu>

    <DataTemplate x:Key="WallpaperItemDataTemplate">
        <Button Command="{Binding DataContext.ShowWallpaperCommand, 
                                  RelativeSource={RelativeSource AncestorType={x:Type pages:BasePage}}}"
                CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=DataContext}"
                ContextMenu="{StaticResource WallpaperItemContextMenu}"
                Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type pages:BasePage}}}">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Foreground" Value="{StaticResource Grey200Brush}"/>
                    <Setter Property="Background" Value="{StaticResource ThemeColor2Brush}"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="FontSize" Value="15"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Grid>
                                    <!-- Item Thumbnail -->
                                    <Border Height="170" Width="245"
                                            Margin="10"
                                            CornerRadius="5"
                                            BorderThickness="1"
                                            BorderBrush="{StaticResource BlueGrey900Brush}">
                                        <Border.Background>
                                            <ImageBrush ImageSource="{Binding Thumbnail}" Stretch="UniformToFill"/>
                                        </Border.Background>
                                    </Border>

                                    <!-- Saved Item Border -->
                                    <Border Margin="5"
                                            CornerRadius="5"
                                            BorderThickness="3"
                                            Visibility="{Binding Id, Converter={StaticResource HasIdToVisibilityConverter}}">
                                        <Border.BorderBrush>
                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="1,1">
                                                <GradientStop Color="{Binding ColorPalette[0].ColorCode}" Offset="0.2" />
                                                <GradientStop Color="{Binding ColorPalette[1].ColorCode}" Offset="0.4" />
                                                <GradientStop Color="{Binding ColorPalette[2].ColorCode}" Offset="0.5" />
                                                <GradientStop Color="{Binding ColorPalette[3].ColorCode}" Offset="0.6" />
                                                <GradientStop Color="{Binding ColorPalette[4].ColorCode}" Offset="0.8" />
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                    </Border>

                                    <!-- Hover Area -->
                                    <Grid x:Name="HoverArea" Visibility="Hidden">
                                        <Border Background="{StaticResource ThemeColor1Brush}"
                                                Opacity=".5"/>

                                        <StackPanel Orientation="Vertical"
                                                    VerticalAlignment="Center"
                                                    HorizontalAlignment="Center">
                                            <Path Height="30" Width="30"
                                                  Stretch="Uniform"
                                                  Margin="0 10"
                                                  Data="{Binding Source={StaticResource EyeSettingsOutline}, Path=Data}"
                                                  Fill="{StaticResource ThemeColor5Brush}"/>

                                            <CheckBox Margin="3 10 0 10"
                                                      Style="{StaticResource StarCheckBox}"
                                                      IsChecked="{Binding IsFavorite}"
                                                      VerticalAlignment="Center"
                                                      ToolTip="{DynamicResource AddtoFavorites}">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="Click">
                                                        <i:InvokeCommandAction Command="{Binding DataContext.SetFavoriteWallpaperCommand, 
                                                                                         RelativeSource={RelativeSource AncestorType={x:Type pages:BasePage}}}" 
                                                                               CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                                                  AncestorType={x:Type CheckBox}}, Path=DataContext}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </CheckBox>

                                            <TextBlock Text="{DynamicResource Saved}"
                                                       Typography.Capitals="AllSmallCaps"
                                                       Foreground="{StaticResource ThemeColor5Brush}"
                                                       Visibility="{Binding Id, Converter={StaticResource HasIdToVisibilityConverter}}"/>
                                        </StackPanel>
                                    </Grid>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Visibility" TargetName="HoverArea" Value="Visible"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>
    </DataTemplate>

    <DataTemplate x:Key="MobileWallpaperItemDataTemplate">
        <Button Command="{Binding DataContext.ShowWallpaperCommand, 
                                  RelativeSource={RelativeSource AncestorType={x:Type pages:BasePage}}}"
                CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=DataContext}"
                ContextMenu="{StaticResource WallpaperItemContextMenu}"
                Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type pages:BasePage}}}">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Foreground" Value="{StaticResource Grey200Brush}"/>
                    <Setter Property="Background" Value="{StaticResource ThemeColor2Brush}"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="FontSize" Value="15"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Grid>
                                    <!-- Item Thumbnail -->
                                    <Border Height="245" Width="185"
                                            Margin="10"
                                            CornerRadius="5"
                                            BorderThickness="1"
                                            BorderBrush="{StaticResource BlueGrey900Brush}">
                                        <Border.Background>
                                            <ImageBrush ImageSource="{Binding Thumbnail}" Stretch="UniformToFill"/>
                                        </Border.Background>
                                    </Border>

                                    <!-- Saved Item Border -->
                                    <Border Margin="5"
                                            CornerRadius="5"
                                            BorderThickness="3"
                                            Visibility="{Binding Id, Converter={StaticResource HasIdToVisibilityConverter}}">
                                        <Border.BorderBrush>
                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="1,1">
                                                <GradientStop Color="{Binding ColorPalette[0].ColorCode}" Offset="0.2" />
                                                <GradientStop Color="{Binding ColorPalette[1].ColorCode}" Offset="0.4" />
                                                <GradientStop Color="{Binding ColorPalette[2].ColorCode}" Offset="0.5" />
                                                <GradientStop Color="{Binding ColorPalette[3].ColorCode}" Offset="0.6" />
                                                <GradientStop Color="{Binding ColorPalette[4].ColorCode}" Offset="0.8" />
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                    </Border>

                                    <!-- Hover Area -->
                                    <Grid x:Name="HoverArea" Visibility="Hidden">
                                        <Border Background="{StaticResource ThemeColor1Brush}"
                                                Opacity=".5"/>

                                        <StackPanel Orientation="Vertical"
                                                    VerticalAlignment="Center"
                                                    HorizontalAlignment="Center">
                                            <Path Height="30" Width="30"
                                                  Stretch="Uniform"
                                                  Margin="0 10"
                                                  Data="{Binding Source={StaticResource EyeSettingsOutline}, Path=Data}"
                                                  Fill="{StaticResource ThemeColor5Brush}"/>

                                            <CheckBox Margin="3 10 0 10"
                                                      Style="{StaticResource StarCheckBox}"
                                                      IsChecked="{Binding IsFavorite}"
                                                      ToolTip="{DynamicResource AddtoFavorites}">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="Click">
                                                        <i:InvokeCommandAction Command="{Binding DataContext.SetFavoriteWallpaperCommand, 
                                                                                         RelativeSource={RelativeSource AncestorType={x:Type pages:BasePage}}}" 
                                                                               CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                                                  AncestorType={x:Type CheckBox}}, Path=DataContext}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </CheckBox>

                                            <TextBlock Text="{DynamicResource Saved}"
                                                       Typography.Capitals="AllSmallCaps"
                                                       Foreground="{StaticResource ThemeColor5Brush}"
                                                       Visibility="{Binding Id, Converter={StaticResource HasIdToVisibilityConverter}}"/>
                                        </StackPanel>
                                    </Grid>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Visibility" TargetName="HoverArea" Value="Visible"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>
    </DataTemplate>

    <DataTemplate x:Key="MyWallpaperItemDataTemplate">
        <Button Command="{Binding DataContext.ShowWallpaperCommand, 
                                  RelativeSource={RelativeSource AncestorType={x:Type pages:BasePage}}}"
                CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=DataContext}"
                ContextMenu="{StaticResource WallpaperItemContextMenu}"
                Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type pages:BasePage}}}">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Foreground" Value="{StaticResource Grey200Brush}"/>
                    <Setter Property="Background" Value="{StaticResource ThemeColor2Brush}"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="FontSize" Value="15"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Grid>
                                    <!-- Item Thumbnail -->
                                    <Border Height="245" Width="200"
                                            Margin="10"
                                            CornerRadius="5"
                                            BorderThickness="1"
                                            BorderBrush="{StaticResource BlueGrey900Brush}">
                                        <Border.Background>
                                            <ImageBrush ImageSource="{Binding Thumbnail}" Stretch="UniformToFill"/>
                                        </Border.Background>
                                    </Border>

                                    <!-- Saved Item Border -->
                                    <Border Margin="5"
                                            CornerRadius="5"
                                            BorderThickness="3"
                                            Visibility="{Binding Id, Converter={StaticResource HasIdToVisibilityConverter}}">
                                        <Border.BorderBrush>
                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="1,1">
                                                <GradientStop Color="{Binding ColorPalette[0].ColorCode}" Offset="0.2" />
                                                <GradientStop Color="{Binding ColorPalette[1].ColorCode}" Offset="0.4" />
                                                <GradientStop Color="{Binding ColorPalette[2].ColorCode}" Offset="0.5" />
                                                <GradientStop Color="{Binding ColorPalette[3].ColorCode}" Offset="0.6" />
                                                <GradientStop Color="{Binding ColorPalette[4].ColorCode}" Offset="0.8" />
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                    </Border>

                                    <!-- Hover Area -->
                                    <Grid x:Name="HoverArea" Visibility="Hidden">
                                        <Border Background="{StaticResource ThemeColor1Brush}"
                                                Opacity=".5"/>

                                        <StackPanel Orientation="Vertical"
                                                    VerticalAlignment="Center"
                                                    HorizontalAlignment="Center">
                                            <Path Height="30" Width="30"
                                                  Stretch="Uniform"
                                                  Margin="0 10"
                                                  Data="{Binding Source={StaticResource EyeSettingsOutline}, Path=Data}"
                                                  Fill="{StaticResource ThemeColor5Brush}"/>

                                            <CheckBox Margin="0 10 0 10"
                                                      Style="{StaticResource StarCheckBox}"
                                                      IsChecked="{Binding IsFavorite}"
                                                      HorizontalAlignment="Center"
                                                      ToolTip="{DynamicResource AddtoFavorites}">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="Click">
                                                        <i:InvokeCommandAction Command="{Binding DataContext.SetFavoriteWallpaperCommand, 
                                                                                         RelativeSource={RelativeSource AncestorType={x:Type pages:BasePage}}}" 
                                                                               CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                                                  AncestorType={x:Type CheckBox}}, Path=DataContext}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </CheckBox>

                                            <TextBlock Foreground="{StaticResource ThemeColor5Brush}"
                                                       Visibility="{Binding Id, Converter={StaticResource HasIdToVisibilityConverter}}">
                                                <TextBlock.Text>
                                                    <MultiBinding StringFormat="{}{0}x{1}">
                                                        <Binding Path="DimensionX"/>
                                                        <Binding Path="DimensionY"/>
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>
                                        </StackPanel>
                                    </Grid>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Visibility" TargetName="HoverArea" Value="Visible"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>
    </DataTemplate>

    <!--#endregion-->

    <DataTemplate x:Key="ResolutionItemDataTemplate">
        <ToggleButton IsChecked="{Binding IsChecked}">
            <ToggleButton.Style>
                <Style TargetType="{x:Type ToggleButton}">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Foreground" Value="{StaticResource Grey200Brush}"/>
                    <Setter Property="Background" Value="{StaticResource ThemeColor2Brush}"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="FontSize" Value="15"/>
                    <Setter Property="Height" Value="35"/>
                    <Setter Property="Width" Value="75"/>
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Tag" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                                                           AncestorType={x:Type ComboBox}}, Path=Data}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                <Border x:Name="Border" Height="30" Width="65"
                                        Margin="0 0" Padding="0"
                                        BorderThickness="1"
                                        Background="{StaticResource ThemeColor3Brush}"
                                        CornerRadius="3">
                                    <TextBlock FontSize="12"
                                               Foreground="{StaticResource ThemeColor4Brush}"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Center">
                                        <TextBlock.Text>
                                            <MultiBinding StringFormat="{}{0}x{1}">
                                                <Binding Path="ResolutionX"/>
                                                <Binding Path="ResolutionY"/>
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource ThemeColor5Brush}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ToggleButton.Style>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Checked">
                    <i:InvokeCommandAction Command="{Binding DataContext.ResolutionChangedCommand, 
                                                             RelativeSource={RelativeSource Mode=FindAncestor, 
                                                             AncestorType={x:Type pages:BasePage}}}">
                        <i:InvokeCommandAction.CommandParameter>
                            <MultiBinding Converter="{StaticResource MultipleParametersConverter}">
                                <Binding Path="DataContext" RelativeSource="{RelativeSource Mode=FindAncestor, 
                                                            AncestorType={x:Type ToggleButton}}"/>
                                <Binding Path="Tag" RelativeSource="{RelativeSource Mode=FindAncestor, 
                                                    AncestorType={x:Type ComboBox}}"/>
                            </MultiBinding>
                        </i:InvokeCommandAction.CommandParameter>
                    </i:InvokeCommandAction>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </ToggleButton>
    </DataTemplate>
    
    <DataTemplate x:Key="ResolutionRatioDataTemplate">
        <Grid Height="40" Width="470"
              HorizontalAlignment="Left">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="70"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <TextBlock Text="{Binding Ratio}"
                       Margin="10 0"
                       Foreground="{StaticResource BlueGrey400Brush}"
                       VerticalAlignment="Center"/>

            <ListView Grid.Column="1"
                      ItemTemplate="{StaticResource ResolutionItemDataTemplate}" 
                      ItemsSource="{Binding Resolutions}"
                      VerticalAlignment="Center"
                      Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type pages:BasePage}}}"/>
        </Grid>
    </DataTemplate>
    
</ResourceDictionary>